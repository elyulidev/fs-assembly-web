{
	"HomePage": {
		"title": "P√°gina inicial",
		"subtitle": "Bem-vindo √† nossa plataforma de aprendizado",
		"courseModulesTitle": "M√≥dulos do curso",
		"viewModuleButton": "Ver m√≥dulo"
	},
	"Header": {
		"faq": "Faq"
	},
	"Footer": {
		"rights": "Todos os direitos reservados"
	},
	"Course": {
		"module1": {
			"title": "Fundamentos e Arquitetura do Computador",
			"description": "Este m√≥dulo inicial estabelece as bases te√≥ricas indispens√°veis. Introduz a linguagem assembly, sua rela√ß√£o com a linguagem de m√°quina e seu lugar no ecossistema de programa√ß√£o.",
			"conference1": {
				"title": "Introdu√ß√£o √† Linguagem Assembly",
				"description": "Boas-vindas e aplica√ß√µes da linguagem assembly. O conceito de m√°quina virtual e rela√ß√£o entre assembly, linguagem de m√°quina e linguagens de alto n√≠vel.",
				"slide1": {
					"title": "Aplica√ß√µes da Linguagem Assembly",
					"content1": "Boas-vindas e aplica√ß√µes da linguagem assembly: sistemas embarcados, otimiza√ß√£o de jogos, controladores de dispositivos.",
					"content2": "O conceito de m√°quina virtual: n√≠veis de abstra√ß√£o desde o hardware at√© as linguagens de alto n√≠vel.",
					"content3": "Rela√ß√£o entre assembly, linguagem de m√°quina e linguagens de alto n√≠vel (rela√ß√£o 1-para-1 vs. 1-para-muitos)."
				},
				"slide2": {
					"title": "Arquitetura do Processador",
					"content1": "Introdu√ß√£o √† arquitetura do processador did√°tico CS2010.",
					"content2": "Componentes b√°sicos de um sistema computacional.",
					"content3": "Fluxo de execu√ß√£o de instru√ß√µes."
				},
				"slide3": {
					"title": "Conceitos Fundamentais",
					"content1": "Linguagem assembly como representa√ß√£o simb√≥lica de c√≥digos de m√°quina.",
					"content2": "Caracter√≠sticas da linguagem assembly: baixo n√≠vel, espec√≠fica por arquitetura.",
					"content3": "Vantagens e desvantagens em rela√ß√£o √†s linguagens de alto n√≠vel."
				},
				"slide4": {
					"title": "Ferramentas e Ecossistema",
					"content1": "Programa assembler e sua fun√ß√£o no processo de desenvolvimento.",
					"content2": "Tipos de assemblers: de passagem √∫nica e de duas passagens.",
					"content3": "Ambientes de desenvolvimento para programa√ß√£o em assembly."
				}
			},
			"conference2": {
				"title": "Sistemas de Numera√ß√£o e Representa√ß√£o de Dados",
				"description": "Sistemas bin√°rio, decimal e hexadecimal. Representa√ß√£o de inteiros e caracteres."
			},
			"conference3": {
				"title": "Arquitetura B√°sica do Processador (CPU)",
				"description": "Componentes de um microcomputador: CPU, mem√≥ria, barramentos. A CPU: UAL e Unidade de Controle."
			},
			"conference4": {
				"title": "Ferramentas do Programador e Primeiro Programa",
				"description": "Editores de c√≥digo vs IDEs. Assemblers, linkers e depuradores."
			}
		},
		"module2": {
			"title": "Conjunto de Instru√ß√µes e Acesso √† Mem√≥ria",
			"description": "Neste m√≥dulo, os estudantes come√ßar√£o a escrever c√≥digo funcional, aprendendo as instru√ß√µes fundamentais para mover dados, realizar opera√ß√µes aritm√©ticas e acessar a mem√≥ria.",
			"conference1": {
				"title": "Transfer√™ncia de Dados e Defini√ß√£o de Vari√°veis",
				"description": "Instru√ß√µes de transfer√™ncia: MOV, LDI. Diretivas de defini√ß√£o de dados."
			},
			"conference2": {
				"title": "Aritm√©tica de Inteiros",
				"description": "Instru√ß√µes aritm√©ticas b√°sicas: ADD, SUB, INC, DEC. Instru√ß√£o NEG para complemento a dois."
			},
			"conference3": {
				"title": "Acesso √† Mem√≥ria e Modos de Endere√ßamento I",
				"description": "Acesso direto √† mem√≥ria: LDS e STS. Modos de endere√ßamento fundamentais."
			},
			"conference4": {
				"title": "Modos de Endere√ßamento II e Pr√°tica",
				"description": "Aprofundamento em endere√ßamento indireto. Endere√ßamento indexado."
			}
		},
		"module3": {
			"title": "L√≥gica e Fluxo de Controle",
			"description": "Este m√≥dulo √© crucial, pois ensina os estudantes a implementar l√≥gica de decis√£o e estruturas repetitivas, que s√£o a base de qualquer algoritmo complexo.",
			"conference1": {
				"title": "Flags, Compara√ß√µes e Saltos Incondicionais",
				"description": "O registro de flags (FLAGS/EFLAGS). Instru√ß√£o CMP e saltos incondicionais JMP."
			},
			"conference2": {
				"title": "Saltos Condicionais",
				"description": "Instru√ß√µes de salto baseadas em flags. Implementa√ß√£o de estruturas IF-THEN-ELSE."
			},
			"conference3": {
				"title": "Loops",
				"description": "Implementa√ß√£o de loops WHILE e DO-WHILE. Instru√ß√£o LOOP e suas variantes."
			},
			"conference4": {
				"title": "Opera√ß√µes a N√≠vel de Bits",
				"description": "Instru√ß√µes l√≥gicas: AND, OR, XOR, NOT. Instru√ß√µes de deslocamento e rota√ß√£o."
			}
		},
		"module4": {
			"title": "Subprogramas, Pilha e Interface com Linguagens de Alto N√≠vel",
			"description": "Este m√≥dulo introduz a programa√ß√£o modular atrav√©s de sub-rotinas. Explora o funcionamento da pilha e a interoperabilidade com C/C++.",
			"conference1": {
				"title": "A Pilha e seu Funcionamento",
				"description": "Conceito de pilha (LIFO). Registros de pilha: ESP e EBP. Instru√ß√µes PUSH e POP."
			},
			"conference2": {
				"title": "Subprogramas (Procedimentos e Fun√ß√µes)",
				"description": "Instru√ß√µes CALL e RET. O quadro de pilha (stack frame). Pr√≥logo e ep√≠logo de uma fun√ß√£o."
			},
			"conference3": {
				"title": "Conven√ß√µes de Chamada e Vari√°veis Locais",
				"description": "Passagem de par√¢metros para sub-rotinas. Cria√ß√£o de vari√°veis locais na pilha."
			},
			"conference4": {
				"title": "Interface com Linguagens de Alto N√≠vel (C/C++)",
				"description": "Como chamar rotinas assembly a partir de C/C++ e vice-versa. Tratamento de nomes."
			}
		},
		"module5": {
			"title": "Estruturas de Dados",
			"description": "Aborda as estruturas de dados mais comuns, como arrays e strings, e como manipul√°-las eficientemente em assembly.",
			"conference1": {
				"title": "Arrays Unidimensionais",
				"description": "Defini√ß√£o de arrays. C√°lculo de endere√ßos e acesso a elementos."
			},
			"conference2": {
				"title": "Processamento de Strings",
				"description": "Representa√ß√£o de strings de caracteres. Instru√ß√µes de string."
			},
			"conference3": {
				"title": "Arrays Multidimensionais e Estruturas",
				"description": "Representa√ß√£o de arrays bidimensionais. Mapeamento de struct de C para assembly."
			},
			"conference4": {
				"title": "Recursividade",
				"description": "Conceito de recursividade e sua implementa√ß√£o usando a pilha. C√°lculo do fatorial."
			}
		},
		"module6": {
			"title": "T√≥picos Avan√ßados e de Sistema",
			"description": "Este m√≥dulo final explora t√≥picos mais complexos como convers√£o para c√≥digo de m√°quina, intera√ß√£o com o sistema operacional e aritm√©tica de ponto flutuante.",
			"conference1": {
				"title": "Assemblagem e C√≥digo de M√°quina",
				"description": "Processo de convers√£o de mnem√¥nicos para opcodes. Formatos de instru√ß√£o x86/CS2010."
			},
			"conference2": {
				"title": "Interrup√ß√µes e Servi√ßos do Sistema Operacional",
				"description": "Conceito de interrup√ß√µes. Uso de INT para servi√ßos do BIOS ou SO."
			},
			"conference3": {
				"title": "Aritm√©tica de Ponto Flutuante I",
				"description": "Representa√ß√£o IEEE 754. Unidade de Ponto Flutuante (FPU) e seus registros."
			},
			"conference4": {
				"title": "Aritm√©tica de Ponto Flutuante II e Revis√£o Geral",
				"description": "Instru√ß√µes FMUL e FDIV. Compara√ß√£o de n√∫meros de ponto flutuante. Revis√£o geral."
			}
		},
		"conferenceCount": "{count, plural, =0 {0 confer√™ncias} =1 {1 confer√™ncia} other {# confer√™ncias}}",
		"estimatedHours": "{hours} horas estimadas",
		"toBeAdded": {
			"title": "A ser adicionado",
			"content": "O conte√∫do detalhado ser√° adicionado em breve."
		}
	},
	"Theme": {
		"toggle": "Mudar tema",
		"light": "Claro",
		"dark": "Escuro",
		"system": "Sistema"
	},
	"LanguageSwitcher": {
		"toggle": "Selecionar idioma"
	},
	"FaqPage": {
		"title": "Perguntas Frequentes",
		"subtitle": "Encontre respostas para as perguntas mais comuns sobre o curso de linguagem assembly.",
		"generalQuestionsTitle": "Perguntas Gerais",
		"faqs": {
			"q1": "O que √© a linguagem assembly?",
			"a1": "A linguagem assembly √© uma linguagem de programa√ß√£o de baixo n√≠vel que foi projetada para ser facilmente traduzida em c√≥digo de m√°quina.",
			"q2": "Quais s√£o as principais caracter√≠sticas da linguagem assembly?",
			"a2": "As principais caracter√≠sticas da linguagem assembly incluem sua proximidade com o hardware, o uso de mnem√¥nicos e a capacidade de manipular diretamente registros e mem√≥ria.",
			"q3": "Como a linguagem assembly se compara a outras linguagens de programa√ß√£o?",
			"a3": "A linguagem assembly √© mais pr√≥xima do hardware e permite um controle mais preciso sobre os recursos do sistema em compara√ß√£o com linguagens de alto n√≠vel.",
			"q4": "Quais ferramentas s√£o utilizadas para programar em assembly?",
			"a4": "As ferramentas comuns para programar em assembly incluem assemblers, debuggers e simuladores."
		},
		"aiAssistant": {
			"title": "Ainda n√£o h√° mensagens",
			"description": "Fa√ßa perguntas sobre o curso e obtenha respostas instant√¢neas.",
			"yourQuestionLabel": "Sua pergunta",
			"placeholder": "Escreva sua pergunta aqui...",
			"answerTitle": "Resposta",
			"answerDescription": "Aqui est√° a resposta √† sua pergunta: {question}",
			"errorTitle": "Ops üî•, algo deu errado",
			"processingButton": "Procesando...",
			"getAnswerButton": "Obter resposta",
			"retry": "Tentar novamente"
		}
	}
}
